% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mixer.R
\name{Mixer}
\alias{Mixer}
\title{A Mixer Object}
\value{
Returns R6 object of class Mixer.
}
\description{
A Mixer object which can generate a mix distribution from given
distributions.
}
\examples{
Mixer$new(family="gaussian", latent=2)


## ------------------------------------------------
## Method `Mixer$set_family`
## ------------------------------------------------

Mixer$new()$set_family("gaussian", 2)
# Return `c(FamilyNormal$new(), FamilyNormal$new())`.
Mixer$new()$set_family(c("gaussian", "poisson"), 2)
# Return `c(FamilyNormal$new(), FamilyPoisson$new())`. 
}
\author{
Dongjie Wu
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Mixer$new()}}
\item \href{#method-get_latent}{\code{Mixer$get_latent()}}
\item \href{#method-get_ll}{\code{Mixer$get_ll()}}
\item \href{#method-get_family_init}{\code{Mixer$get_family_init()}}
\item \href{#method-mix_ll}{\code{Mixer$mix_ll()}}
\item \href{#method-post_pr}{\code{Mixer$post_pr()}}
\item \href{#method-gen_gr}{\code{Mixer$gen_gr()}}
\item \href{#method-set_family}{\code{Mixer$set_family()}}
\item \href{#method-gen_start}{\code{Mixer$gen_start()}}
\item \href{#method-gen_constraint}{\code{Mixer$gen_constraint()}}
\item \href{#method-clone}{\code{Mixer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new instance of this \link{R6} \link[R6:R6Class]{R6::R6Class} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$new(family = "gaussian", latent = 2, use_llc = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{family}}{\code{formula(1)} \cr
The family/families of the mixture model to fit in the fmglm.
The distribution family can be either a string like
"gaussian" or a vector like \code{c("gaussian", "poisson")}.
The default value is \code{gaussian}.}

\item{\code{latent}}{\code{numeric(1)} \cr
The number of latent classes. The default is 2.}

\item{\code{use_llc}}{\code{boolean(1)} \cr
Whether to use the complete log-likelihood to fit the model.
The default is \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_latent"></a>}}
\if{latex}{\out{\hypertarget{method-get_latent}{}}}
\subsection{Method \code{get_latent()}}{
The function to return the number of the latent class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$get_latent()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_ll"></a>}}
\if{latex}{\out{\hypertarget{method-get_ll}{}}}
\subsection{Method \code{get_ll()}}{
The function to return the log-likelihood.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$get_ll()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_family_init"></a>}}
\if{latex}{\out{\hypertarget{method-get_family_init}{}}}
\subsection{Method \code{get_family_init()}}{
The function to return the \code{family} variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$get_family_init()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mix_ll"></a>}}
\if{latex}{\out{\hypertarget{method-mix_ll}{}}}
\subsection{Method \code{mix_ll()}}{
The function to generate the mixed log-likelihood.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$mix_ll(use_llc = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{use_llc}}{\code{boolean(1)} \cr
Whether to use the complete log-likelihood to fit the model.
The default is \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-post_pr"></a>}}
\if{latex}{\out{\hypertarget{method-post_pr}{}}}
\subsection{Method \code{post_pr()}}{
Generate the posterior probability given estimated coefficients and data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$post_pr(theta, pi_vector, Y, X)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{\code{matrix(1)} \cr
The estimated coefficients matrix.}

\item{\code{pi_vector}}{\code{numeric(1)} \cr
The prior probabilities of being in each class.}

\item{\code{Y}}{\code{matrix(1)} \cr
The dependent variable.}

\item{\code{X}}{\code{matrix(1)} \cr
The independent variables.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gen_gr"></a>}}
\if{latex}{\out{\hypertarget{method-gen_gr}{}}}
\subsection{Method \code{gen_gr()}}{
Generate the gradiant function given the log-likelihood function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$gen_gr(ll)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ll}}{\verb{function(1)} \cr
The log-likelihood function.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_family"></a>}}
\if{latex}{\out{\hypertarget{method-set_family}{}}}
\subsection{Method \code{set_family()}}{
Given the \code{family} variable and number of classes,
generate a set of \code{Family} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$set_family(family, latent)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{family}}{\code{character(1)} \cr
The family variable.}

\item{\code{latent}}{\code{integer(1)} \cr
The latent class variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Mixer$new()$set_family("gaussian", 2)
# Return `c(FamilyNormal$new(), FamilyNormal$new())`.
Mixer$new()$set_family(c("gaussian", "poisson"), 2)
# Return `c(FamilyNormal$new(), FamilyPoisson$new())`. 
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gen_start"></a>}}
\if{latex}{\out{\hypertarget{method-gen_start}{}}}
\subsection{Method \code{gen_start()}}{
generate the start value: if the start value is provided
make sure it has the correct length. If the start value is not
provided, generate a start value with the correct length.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$gen_start()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gen_constraint"></a>}}
\if{latex}{\out{\hypertarget{method-gen_constraint}{}}}
\subsection{Method \code{gen_constraint()}}{
Generate the constraint of the parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$gen_constraint()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Mixer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
